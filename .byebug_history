q
qy
options
self_class_name.foreign_key
self_class_name.foriegn_key
self_class_name
q
self_class_name
name
options
name
self_class_name
q
y
options[:class_name]q
options[:class_name]
options
c
param_values
continue
c
params
where_line
c
params.valuesc
params.values
params.keys
params
c
exit
continue
self.class.find(10)
self.class.find(1)
self.class
c
attr_values
q
col_names
self.attribute_values
attributes_values
quit
      |values| "#{values[0]} = #{values[1]}"
    col_and_values = [col_names,attributes.values].tranpose.map do
col_names = self.class.columns[1..-1]
    end
      |values| "#{values[0]} = #{values[1]}"
    col_and_values = [col_names,attributes.values].tranpose.map do
col_names = self.class.columns[1..-1]
    end
      |values| "#{values[0]} = #{values[1]}"
    col_and_values = [col_names,attributes.values].tranpose.map do
col_names = self.class.columns[1..-1]
continue
self.class.all.count
self.class.all
self.class
cats.all
c
q
exit
attribute_values
col_names
c
attribute_values.join(", ")
attribute_values
col_names
c
q
exit
col_names
c
q
attribute_values.join(",")
c
q
attribute_values.join(",")
attribute_values.join
attribute_values.to_s
attribute_values
q
self.class.columns[1..-1]
self.class.column[1..-1]
col_names[1..-1]
col_names
exit
attributes
col_names
attribute_values
q
exit
self.class.table_name
table_name
exit
attributes
value
exit
value
exit
value
c
exit
value
exit
exit'
value.class
value
exit
value.class
values
value
quit
object
exit
table_hashes
c
results
exit
results
result
exit
self.class
self
quit
exit
continue
exit
self.class.columns
self.column
self.columns
self
elf
params
param
